WIN1251 codepage


Описание протокола для работы с MiReader.

ОБЩИЕ ПРИНЦИПЫ
~~~~~~~~~~~~~~
Ридер Mifare является Slave-устройством, т.е. только отвечает на команды и 
не может инициировать обмен данными. Ридер отвечает на каждый пакет 
(команду). В случае, если пакет сформирован некорректно - ридер шлет NACK 
(0x15). Если пакет команды сформирован правильно, ридер отвечает на 
команду. Формат пакета команды и ответа одинаковый (описание ниже).
Интерфейс осуществляется на скорости 57600,2 стоп-бита, проверка на 
четность.


ФОРМАТ ПАКЕТА
~~~~~~~~~~~~~
STX LEN B1 B2 B3 ... CS
где:
STX - признак начала передачи (02)
LEN - число байт в пакете (только "полезных" байт - без учета STX, LEN, CS)
CS - контрольная сумма пакета. Вычисляется XOR-ом по байтам пакета, начиная с 
байта длины, начальное значение=0.
Bn - байт данных в пакете

Рассмотрим на примере: посылка однобайтового пакета, состоящего из байта 
0x13 (команда останова карты).
Посылка будет такой (в HEX):
 02  01  13  12
STX LEN  B1  CS

Минимальная длина пакета - один байт.
В пакетах команд первый байт содержит код команды. В пакетах ответа ридера 
на команду - код ошибки. Код ошибки 0 - успешное выполнение команды.


ОПИСАНИЕ КОМАНД
~~~~~~~~~~~~~~~
Описание команд будет приведено в следующем виде:

Код:           // код команды
Описание:      // краткое описание, что делает команда
В библиотеке:  // имя соответствующей функции в MiReader.dll
Параметры:     // параметры команды (идут в пакете после кода команды)
Ответ:         // байты ответа (идут после кода ошибки)
Если команда не имеет параметров (пакет состоит только из кода команды) 
или ответ на команду состоит только из кода ошибки, то соответствующие 
поля в описании опущены.
-------------------------------------------------

Код:  2
Описание: начальное конфигурирование устройства
В библиотеке: Mf500PcdConfig

---------------------------------------------------------------

Код: 0х20
Описание: звуковой сигнал
В библиотеке: PcdBeep
Параметры: 
 1). 1 байт - номер звукового тона
---------------------------------------------------------------

Код: 0х15
Описание: чтение серийного номера ридера
В библиотеке: PcdGetSnr
Ответ: 
 1). 4 байта - номер устройства
---------------------------------------------------------------

Код: 0х1A
Описание: отключение радиополя для сброса всех карт
В библиотеке: PcdRfReset 
Параметры: 
 1). 2 байта - беззнаковое целое, младший байт первым - время в 
миллисекундах, на которое отключается поле.

---------------------------------------------------------------

Код: 4
Описание: запрос карт в радиополе
В библиотеке: Mf500PiccRequest
Параметры:
 1). 1 байт - код запроса:
     PICC_REQIDL (0x26) - запрос карт, находящихся в режиме ожидания (idle);
     PICC_REQALL (0x52) - запрос всех карт в радиополе
Ответ:
 1). 2 байта - тип карты (ATQ)
---------------------------------------------------------------

Код: 5
Описание: антиколлизия
В библиотеке:  Mf500PiccCascAnticoll
Параметры: 
 1). 1 байт - код антиколлизии (0х93 для первого уровня, 0х95 для второго...)
 2). 1 байт - bcnt - число известных бит из номера карты (для уровня)
 3). 4 байта - номер карты (в котором заполнены первые bcnt бит)
Ответ:
 1). 4 байта - полный номер (все 32 бита) карты (для данного уровня)
---------------------------------------------------------------

Код: 6
Описание: выбор карты
В библиотеке: Mf500PiccCascSelect
Параметры:
 1). 1 байт - код уровня (0х93 - первый, 0х95 - второй...)
 2). 4 байта - полный номер карты (для данного уровня)
Ответ:
 1). 4 байта - полный номер карты (для данного уровня)
 2). 1 байт SAK (Select Acknowledge)
---------------------------------------------------------------

Код: 7
Описание: активация (запрос и выбор) карты в состоянии IDLE (ожидание)
В библиотеке: Mf500PiccActivateIdle
Параметры:
 1). 1 байт - код скорости работы с картой (должен быть равен 0!)
 2). 1 байт - зарезервирован, должен быть равен 0!
Ответ:
 1). 2 байт - ATQ (ответ на запрос)
 2). 1 байт - SAK (Select Acknowledge)
 3). 1 байт - длина номера карты (4 для Standard, 7 для ULight)
 4). 4 (или 7) байт - серийный номер выбранной карты
---------------------------------------------------------------

Код: 9
Описание: активация карты в состоянии HALT(останов) или IDLE (ожидание)
В библиотеке: Mf500PiccActivateWakeup
Параметры:
 1). 1 байт - код скорости работы с картой (должен быть равен 0!)
 2). 1 байт - зарезервирован, должен быть равен 0!
Ответ:
 1). 2 байт - ATQ (ответ на запрос)
 2). 1 байт - SAK (Select Acknowledge)
 3). 1 байт - длина номера карты (4 для Standard, 7 для ULight)
 4). 4 (или 7) байт - серийный номер выбранной карты
---------------------------------------------------------------

Код: 0x0A
Описание: авторизация для доступа к сектору
В библиотеке: Mf500PiccAuth
Параметры:
 1). 1 байт - тип ключа (ключ А=0х60 или ключ Б=0х61)
 2). 1 байт - номер сектора в EEPROM MFRC (0..15), где хранится ключ
 3). 1 байт - номер блока карты, к которому выполняется авторизация
Ответ:
---------------------------------------------------------------

Код: 0x0B
Описание: записывает ключ в защищенную EEPROM устройства
В библиотеке: Mf500PcdLoadKeyE2
Параметры:
 1). 1 байт - тип ключа (ключ А=0х60 или ключ Б=0х61)
 2). 1 байт - номер сектора в EEPROM MFRC (0..15), где хранится ключ
 3). 6 байт - ключ в некодированном виде
Ответ:
---------------------------------------------------------------

Код: 0х0С
Описание: авторизация доступа к сектору указанным ключем 
В библиотеке: Mf500PiccAuthKey
Параметры:
 1). 1 байт - тип ключа (ключ А=0х60 или ключ Б=0х61)
 2). 1 байт - номер блока карты, к которому выполняется авторизация
 3). 4 байт - серийный номер карты
 4). 12 байт - ключ в кодированном (12-байтовом) виде
Ответ:
---------------------------------------------------------------

Код: 0x0D
Описание: чтение блока карты
В библиотеке: Mf500PiccCommonRead
Параметры:
 1). 1 байт - код операции чтения (0x30 для 16 байт)
 2). 1 байт - номер блока, который читаем
 3). 1 байт - число считываемых байт (должно быть 16)
Ответ:
 1). 16 байт - содержимое блока
---------------------------------------------------------------

Код: 0x0E
Описание: запись на карту
В библиотеке: Mf500PiccCommonWrite
Параметры:
 1). 1 байт - код операции записи (0xA0 - для 16 байт, 0xA2 - для 4 байт)
 2). 1 байт - номер блока, в который пишем
 3). 1 байт - число записываемых байт (должно быть 16 для Standard)
 4). 16 байт - записываемые данные 
Ответ:
---------------------------------------------------------------

Код: 0x0F
Описание: изменение блока-значения (value-блока)
В библиотеке: Mf500PiccValue
Параметры:
 1). 1 байт - код операции с полем:
   0xC0   PICC_DECREMENT - декремент значения (уменьшение)
   0xC1   PICC_INCREMENT - инкремент значения (увеличение)
   0xB0   PICC_TRANSFER - запись значения (бэкап)
   0xC2   PICC_RESTORE - запись значения (восстановление)
 2). 1 байт - номер блока на карте
 3). 1 байт - номер блока для бекапа-восстановления
 4). 4 байта - значение
Ответ:
---------------------------------------------------------------

Код: 0x10
Описание: аналогична предыдущей, но для карт с ф-цией автоматического бэкапа
В библиотеке: Mf500PiccValueDebit
Параметры:
 1). 1 байт - код операции с полем:
   0xC0   PICC_DECREMENT - декремент значения (уменьшение)
   0xC1   PICC_INCREMENT - инкремент значения (увеличение)
   0xB0   PICC_TRANSFER - запись значения (бэкап)
   0xC2   PICC_RESTORE - запись значения (восстановление)
 2). 1 байт - номер блока на карте
 3). 1 байт - зарезервирован, должен быть 0
 4). 4 байта - значение
Ответ:
---------------------------------------------------------------

Код: 0x13
Описание: останов выбранной карты
В библиотеке: Mf500PiccHalt
Параметры:
Ответ:
---------------------------------------------------------------

Код: 0x32
Описание: Команда поиска и выбора карты указанного типа
В библиотеке: MksFindCard
Параметры:
 1). 2 байта - тип карты
Ответ:
 1). 2 байта - ATQ карты
 2). 4 байта - номер выбранной карты
---------------------------------------------------------------

Код: 0x30
Описание: выбирает последнюю карту, с которой велась работа
В библиотеке: MksReopen
Параметры:
Ответ:
---------------------------------------------------------------

Код: 0x31
Описание: MksReadCatalog
В библиотеке: считывает каталог карты
Параметры: 
Ответ:
 1). 34 байта - массив из 17ти двухбайтовых беззнаковых (каталог+к.с.)
---------------------------------------------------------------

Код: 0x33
Описание: записывает каталог на карту
В библиотеке: MksWriteCatalog
Параметры:
 1). 34 байта - массив из 17ти двухбайтовых беззнаковых (каталог)
Ответ:
---------------------------------------------------------------





P.S.: Подпрограмма кодирования ключа (перевод из 6-байтового в 12-байтовый 
формат)

FCT_PREF Mf500HostCodeKey(  unsigned char *uncoded, // 6 bytes key value uncoded
                     unsigned char *coded)   // 12 bytes key value coded
{
   char status = MI_OK;
   unsigned char cnt = 0;
   unsigned char ln  = 0;     // low nibble
   unsigned char hn  = 0;     // high nibble
   
   for (cnt = 0; cnt < 6; cnt++)
   {
      ln = uncoded[cnt] & 0x0F;
      hn = uncoded[cnt] >> 4;
      coded[cnt * 2 + 1]     =  (~ln << 4) | ln;
      coded[cnt * 2 ] =  (~hn << 4) | hn;
   }
   return MI_OK;
}

